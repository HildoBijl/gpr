@import '../../shared/params.less';

.treeContainer {
	cursor: move; // Fallback if grab cursor is unsupported.
	cursor: grab;
	cursor: -moz-grab;
	cursor: -webkit-grab;
	display: flex;
	flex-grow: 1;
	font-size: 13px;
	height: 100%;
	overflow: visible;
	position: relative;
	user-select: none;
	width: 100%;

	.treeInnerContainer {
		flex-grow: 1;

		.tree {
			cursor: pointer;
			position: absolute;

			.chapter {
				border-radius: 16px;
				box-shadow: 0 2px 4px rgba(0,0,0,.26); // Note: these should also be set in the SVG filter effects in the Tree.js file.
				overflow: hidden;
				position: absolute;
				transition: height 0.4s;
				width: 320px;
				z-index: 0;

				&.previousActive {
					z-index: 1;
				}

				&.active {
					z-index: 2;

					.title {
						box-shadow: 0 2px 4px rgba(0,0,0,.26); // Only add a shadow when the description is active, so the shadow falls on the description.

						svg {
							transform: translateX(-50%) scaleY(-1);
						}
					}
				}

				.title {
					background: inherit;
					border-radius: 16px 16px 0 0;
					display: flex;
					flex-flow: column nowrap;
					height: 80px;
					justify-content: center;
					position: relative; // This is to make the shadow fall onto the description as well.
					z-index: 2;

					p {
						font-weight: bold;
						line-height: 1.5;
						margin: 0;
						padding: 10px 0; // The horizontal padding will be overwritten by Javascript in Tree.js.
						text-align: center;
						transition: margin-bottom 0.4s 0.15s;
					}

					svg {
						bottom: 8px;
						height: 8px;
						margin: auto;
						left: 50%;
						opacity: 0;
						overflow: visible;
						position: absolute;
						transform: translateX(-50%) scaleY(1);
						transition: opacity 0.4s, transform 0.4s;
						width: 12px;

						path {
							stroke-width: 1px;
						}
					}

					&:hover {
						p {
							margin-bottom: 8px;
							transition: margin-bottom 0.4s;
						}

						svg {
							opacity: 1;
							transition: opacity 0.4s 0.15s, transform 0.4s;	
						}
					}
				}

				.description {
					border-radius: 0 0 16px 16px;
					display: flex;
					flex-flow: column nowrap;
					font-size: 0.9em;
					justify-content: flex-end;
					padding: 12px 12px 9px;
					position: relative;
					text-align: justify;
					transition: top 0.4s;
					z-index: 1;

					p {
						line-height: 1.15;
						margin: 0 0 6px 0;

						&.study {
							font-weight: bold;
							margin: 8px 0 0 0;
							opacity: 0.5;
							text-align: right;
							transition: opacity 0.4s 0.15s, margin-right 0.4s 0.15s;
						}
					}

					svg {
						height: 12px;
						opacity: 0;
						overflow: visible;
						position: absolute;
						right: 14px;
						bottom: 2.5px;
						transform: translateY(-50%);
						transition: opacity 0.4s;
						width: 8px;

						path {
							stroke-width: 1px;
						}
					}

					&:hover {
						p.study {
							margin-right: 20px;
							opacity: 1;
							transition: opacity 0.4s, margin-right 0.4s;
						}
						svg {
							opacity: 1;
							transition: opacity 0.4s 0.15s;
						}
					}
				}
			}
		}
	}

	svg.treeBackground {
		cursor: move; // Fallback if grab cursor is unsupported.
		cursor: grab;
		cursor: -moz-grab;
		cursor: -webkit-grab;
		position: absolute;
		z-index: -1;

		.treeLine {
			fill: none;
			stroke-width: 5px;
		}
	}
	
	&.dragging {
		cursor: grabbing;
		cursor: -moz-grabbing;
		cursor: -webkit-grabbing;

		svg.treeBackground {		
			cursor: grabbing;
			cursor: -moz-grabbing;
			cursor: -webkit-grabbing;
		}

		&.invalidClick {
			.tree {
				cursor: grabbing;
				cursor: -moz-grabbing;
				cursor: -webkit-grabbing;
			}
		}
	}
}

// On desktops, apply SVG filters. Do not do so on phones, because SVG filters are computationally heavy and some phone can't take that.
@media @desktop {
	.treeContainer {
		svg.treeBackground {
			.treeLine {
				filter: url(#shadow);
			}
		}
	}
}

.lightTheme {
	.tree {
		color: #fff;

		.chapter {
			background: #013;

			&.unwritten {
				color: #777;
			}

			.title {
				svg {
					path {
						fill: #fff;
						stroke: #fff;
					}
				}
			}
			.description {
				background: #125;
				p.study {
					color: #fff;
				}
				svg {
					path {
						fill: #fff;
						stroke: #fff;
					}
				}
			}
		}
	}
	svg {
		.treeLine {
			stroke: #125;
		}
	}
}
.darkTheme {
	.tree {
		color: #000;

		.chapter {
			background: #adf;

			&.unwritten {
				color: #999;
			}

			.title {
				svg {
					path {
						fill: #000;
						stroke: #000;
					}
				}
			}
			.description {
				background: #def;
				p.study {
					color: #000;
				}
				svg {
					path {
						fill: #000;
						stroke: #000;
					}
				}
			}
		}
	}
	svg {
		.treeLine {
			stroke: #adf;
		}
	}
}