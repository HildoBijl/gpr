@import '../../shared/params.less';

.figure {
	border-radius: 8px;
	margin: 16px 0px;
	padding: 12px;
	position: relative;

	&.twoColumn {
		.subFigures {
			.subFigure {
				// If we are in two-column mode, then plots should have half the regular length.
				@media @landscape {
					width: calc(~"50% - 6px");
				}
				// In portrait mode on phones, figures don't go next to each other but below each other. They should get extra margins for this, so they are not too close.
				@media @phonePortrait {
					&:not(:last-child) {
						margin-bottom: 12px;
					}
				}
			}
		}
	}

	.figureCounter {
		font-size: 0.8em;
		position: absolute;
		right: 7px;
		top: 4px;
		user-select: none;
		z-index: 1;
	}
	.subFigures {
		align-items: flex-start;
		display: flex;
		flex-flow: row wrap;
		justify-content: space-between;
		position: relative;
		z-index: 2;

		.subFigure {
			align-items: center;
			display: flex;
			flex-flow: column nowrap;
			max-width: 800px;
			position: relative;
			width: 100%;

			// If the plot is the only plot in the figure, center it.
			&:only-child {
				margin: auto;
			}
		
			// Enable various classes providing extra looks/functionalities.
			&.noAxes svg .axis {
				display: none;
			}
			&.noNumbers svg .tick text {
				display: none;
			}
			&.pointer svg, &.pointer canvas {
				cursor: pointer;
			}

			.title {
				font-size: 0.9em;
				margin: 2px auto 14px;
			}

			.subFigureInner {
				position: relative;
				width: 100%;

				svg {
					display: block;
					left: 0;
					.notSelectable;
					overflow: visible;
					position: absolute;
					top: 0;
					width: 100%;
					z-index: 2;
				
					// Format the D3 axes.
					.tick {
						stroke: currentColor; // For the axis tick numbers.
						line {
							stroke: currentColor; // For the tick lines.
						}
					}
					.domain {
						stroke: currentColor; // For the axes.
					}
				}
		
				canvas {
					left: 0;
					height: 100%;
					.notSelectable;
					position: absolute;
					top: 0;
					width: 100%;
					z-index: 1;
				}
			}
		}
	}

	.controlBar {
		display: flex;
		flex-flow: row wrap;
		justify-content: flex-end;
		margin: 8px auto 0;
		max-width: 800px;

		// Arrange spacing between control bar items.
		& > div {
			margin-left: 0.75em;

			&:first-child {
				margin-left: 0;
			}
		}

		// Arrange control bar item looks.
		.item {
			background: @lightThemeColor;
			border-radius: 0.375em;
			display: flex;
			flex-flow: column nowrap;
			font-size: 0.9em;
			font-weight: bold;
			height: 1.75em;
			justify-content: center;
			padding: 0.25em 0.5em;
		}

		// Arrange button responsiveness.
		.btn {
			.notSelectable;
			cursor: pointer;

			&:hover {
				background: lighten(@lightThemeColor, 10%);
			}

			&.icon {
				padding: 0.25em;
			}

			.icon {
				height: 1.4em;
				width: 1.4em;

				svg {
					fill: currentColor;
				}
			}
		}
	}
	&.twoColumn {
		.controlBar {
			max-width: none;
		}
	}
}

.figureGuide {
	position: relative;

	&::before {
		content: '';
		height: 100%;
		position: absolute;
		top: 0;
		width: 3px;

		left: -7px;
		@media @desktop {
			left: -12px;
		}
	}

	p:last-child {
		margin-bottom: 0;
	}
}

// Coloring
.lightTheme {
	.figure {
		background: #222;
		color: #fff;
	
		.figureCounter {
			color: #888;
		}
	}
	.figureGuide {
		&::before {
			background: @lightFigureGuideColor;
		}
	}
}
.darkTheme {
	.figure {
		background: #070707;
		color: #fff;
	
		.figureCounter {
			color: #888;
		}
	}
	.figureGuide {
		&::before {
			background: @darkFigureGuideColor;
		}
	}
}